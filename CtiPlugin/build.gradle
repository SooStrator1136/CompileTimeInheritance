plugins {
    id "com.gradle.plugin-publish" version "1.1.0"
    id 'java-gradle-plugin'
    id 'signing'
    id 'java'
}

group 'me.soostrator'
version '1.0'

repositories.mavenCentral()

configurations {
    embedded
}

dependencies {
    embedded 'asm:asm-tree:3.3.1'

    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    compileOnly 'org.projectlombok:lombok:1.18.24'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation configurations.embedded
}

tasks.jar {
    duplicatesStrategy DuplicatesStrategy.EXCLUDE

    from {
        configurations.embedded.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

pluginBundle {
    website = 'https://github.com/SooStrator1136/CompileTimeInheritance'
    vcsUrl = 'https://github.com/SooStrator1136/CompileTimeInheritance'
    setTags(Arrays.asList("java", "asm", "reflection", "inheritance"))
}

gradlePlugin.plugins.create("InheritanceResolver") {
    displayName = "Inheritance Resolver"
    id = 'me.soostrator.resolver'
    description = "Resolves inheritance using asm"
    implementationClass = 'me.soostrator.cti.plugin.ResolverPlugin'
}

test.useJUnitPlatform()

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

//publishing.publications.create("maven", MavenPublication.class).from(components.java) //TODO comment out for plugin publishing

//signing.sign publishing.publications.maven